//
//  DrawViewController.m
//  PenTestExtension
//
//  Created by Luidia on 2018. 05. 04..
//  Copyright © 2018년 Luidia. All rights reserved.
//

#import "DrawViewController.h"
#import "DrawView.h"

@interface DrawViewController ()
{
    IBOutlet DrawView *drawView;
}
@end

@implementation DrawViewController
@synthesize delegate;

- (void)dealloc
{
    if (drawView){
        [drawView release];
        drawView = nil;
    }
    
    [super dealloc];
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        delegate = nil;
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self.view setFrame:[[UIScreen mainScreen] bounds]];
    
    drawView.autoresizingMask = UIViewAutoresizingFlexibleLeftMargin|
    UIViewAutoresizingFlexibleWidth|
    UIViewAutoresizingFlexibleRightMargin|
    UIViewAutoresizingFlexibleBottomMargin;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void) changeResolution:(CGSize) drawingSize {
    [drawView setFrame:CGRectMake(0, 0, drawingSize.width, drawingSize.height)];
    drawView.center = self.view.center;
    
    [drawView changeDrawingSize];
}

-(void) SetDrawInfo:(int)status pressure:(int)pressure pt:(CGPoint)pt color:(UIColor*)color erase:(BOOL)erase eraseSize:(float)eraseSize {
    [drawView DoPenProcess:status pressure:pressure X:pt.x Y:pt.y color:color erase:erase eraseSize:eraseSize];
}

- (IBAction)closeClicked:(id)sender {
    if (delegate) {
        if ([self.delegate respondsToSelector:@selector(closeDrawViewController)]) {
            [self.delegate closeDrawViewController];
        }
    }
    else {
        [self dismissViewControllerAnimated:YES completion:^{
            
        }];
    }
}
- (IBAction)clearAllClicked:(id)sender {
    [drawView clear];
}

- (BOOL) shouldAutoRotate
{
    return YES;
}

- (UIInterfaceOrientationMask)supportedInterfaceOrientations
{
    return UIInterfaceOrientationMaskPortrait|UIInterfaceOrientationMaskPortraitUpsideDown;
}
@end
