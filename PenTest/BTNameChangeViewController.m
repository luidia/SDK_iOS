//
//  BTNameChangeViewController.m
//  Smartpen3
//
//  Created by Park on 18. 3. 20..
//  Copyright © 2018년 amy. All rights reserved.
//

#import "BTNameChangeViewController.h"
#import "AppDelegate.h"
#import "PNFPenLibExtension.h"

@interface BTNameChangeViewController () <UITextFieldDelegate, UIAlertViewDelegate>
{
    IBOutlet UITextField *nameTextField;
}
@end

@implementation BTNameChangeViewController
@synthesize delegate;
@synthesize m_frame;

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"PNF_MSG" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"Disconnected" object:nil];

    if(nameTextField){
        [nameTextField release];
        nameTextField = nil;
    }
    
    [super dealloc];
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        m_PenController = nil;
        delegate = nil;
    }
    return self;
}

#define MAXLENGTH   8

- (BOOL)stringContainsEmoji:(NSString *)string {
    __block BOOL returnValue = NO;
    [string enumerateSubstringsInRange:NSMakeRange(0, [string length]) options:NSStringEnumerationByComposedCharacterSequences usingBlock:
     ^(NSString *substring, NSRange substringRange, NSRange enclosingRange, BOOL *stop) {
         const unichar hs = [substring characterAtIndex:0];
         if (0xd800 <= hs && hs <= 0xdbff) {
             if (substring.length > 1) {
                 const unichar ls = [substring characterAtIndex:1];
                 const int uc = ((hs - 0xd800) * 0x400) + (ls - 0xdc00) + 0x10000;
                 if (0x1d000 <= uc && uc <= 0x1f77f) {
                     returnValue = YES;
                 }
             }
         } else if (substring.length > 1) {
             const unichar ls = [substring characterAtIndex:1];
             if (ls == 0x20e3) {
                 returnValue = YES;
             }
         } else {
             if (0x2100 <= hs && hs <= 0x27ff) {
                 returnValue = YES;
             } else if (0x2B05 <= hs && hs <= 0x2b07) {
                 returnValue = YES;
             } else if (0x2934 <= hs && hs <= 0x2935) {
                 returnValue = YES;
             } else if (0x3297 <= hs && hs <= 0x3299) {
                 returnValue = YES;
             } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b || hs == 0x2b50) {
                 returnValue = YES;
             }
         }
     }];
    return returnValue;
}
-(BOOL)textField:(UITextField *)tf shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)text {
    const char * _char = [text cStringUsingEncoding:NSUTF8StringEncoding];
    int isBackSpace = strcmp(_char, "b");
    if (isBackSpace == -8) {
        return YES;
    }
    if (MAXLENGTH != -1) {
        int maxChar = MAXLENGTH;
        NSString *replacedString = [tf.text stringByReplacingCharactersInRange:range withString:text];
        int len = (int)[replacedString length];
        if( len > maxChar ){
            return NO;
        }
    }
    if ([tf isFirstResponder]) {
        if ([[[tf textInputMode] primaryLanguage] isEqualToString:@"emoji"] || ![[tf textInputMode] primaryLanguage]) {
            return NO;
        }
    }
    if ([self stringContainsEmoji:text]) {
        return NO;
    }
    else if ([text isEqualToString:@"`"] || [text isEqualToString:@"/"] || [text isEqualToString:@":"] ||
             [text isEqualToString:@"*"] || [text isEqualToString:@"?"] || [text isEqualToString:@"<"] ||
             [text isEqualToString:@">"] || [text isEqualToString:@"\""] || [text isEqualToString:@"₩"] ||
             [text isEqualToString:@"|"] || [text isEqualToString:@"\\"] || [text isEqualToString:@"\n"] ||
             [text isEqualToString:@"€"] || [text isEqualToString:@"£"] || [text isEqualToString:@"¥"] || [text isEqualToString:@"•"] ||
             [text isEqualToString:@"&"] || [text isEqualToString:@"+"] || [text isEqualToString:@"'"] || [text isEqualToString:@"."]) {
        NSString* msg = [NSString stringWithFormat:@"' / : * ? < > \" ₩ | \\ & + \\n ' € £ ¥ • .\n%@",
                         @"IGNORE SPECIAL CHAR"];

        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"" message:msg preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction *action = [UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault handler:^(UIAlertAction *action){}];
        
        [alert addAction:action];
        [self presentViewController:alert animated:YES completion:nil];
        
        return NO;
    }
    return YES;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.frame = self.m_frame;
    
    NSString* bleName = [m_PenController BLECurrentName];
    bleName = [bleName stringByReplacingOccurrencesOfString:@"eSM-" withString:@""];
    bleName = [bleName stringByReplacingOccurrencesOfString:@"<" withString:@""];
    bleName = [bleName stringByReplacingOccurrencesOfString:@">" withString:@""];
    bleName = [bleName stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    if (bleName.length > 8) {
        NSRange range = {0, 8};
        bleName = [bleName substringWithRange:range];
    }
    [nameTextField setText:bleName];
    nameTextField.delegate = self;
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(DICallBack:) name:@"PNF_MSG" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(disconnected) name:@"Disconnected" object:nil];
}
-(void) disconnected {
    [self closeBtnClicked:nil];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
-(void) SetPenController:(PNFPenLibExtension *)penController {
    m_PenController = penController;
}

-(void) DICallBack:(NSNotification *)call {
    NSString * szS = (NSString *) [call object];
    
    if ([szS isEqualToString:@"ChangeDeviceName_OK"]) {
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Change name Complete"
                                                                       message:@""
                                                                       preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction *action = [UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault handler:^(UIAlertAction *action){
            if (delegate)
            {
                if ([self.delegate respondsToSelector:@selector(successBTNameChangeViewController)])
                    [delegate successBTNameChangeViewController];
            }
            
            [self dismissViewControllerAnimated:YES completion:^{}];
        }];
        
        [alert addAction:action];
        [self presentViewController:alert animated:YES completion:nil];
    }
    else if ([szS isEqualToString:@"ChangeDeviceName_FAIL"] || [szS isEqualToString:@"DI_SEND_ERR"]) {
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Change name fail."
                                                                       message:@""
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction *action = [UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault handler:^(UIAlertAction *action){
            [self closeBtnClicked:nil];
        }];
        
        [alert addAction:action];
        [self presentViewController:alert animated:YES completion:nil];
    }
}

- (IBAction)backBtnClicked:(id)sender {
    if (delegate)
    {
        if ([self.delegate respondsToSelector:@selector(closeBTNameChangeViewController)])
            [delegate closeBTNameChangeViewController];
    }
    
    [self dismissViewControllerAnimated:YES completion:^{}];
}

- (IBAction)closeBtnClicked:(id)sender {
    if (delegate)
    {
        if ([self.delegate respondsToSelector:@selector(closeBTNameChangeViewController)])
            [delegate closeBTNameChangeViewController];
    }
    
    [self dismissViewControllerAnimated:YES completion:^{}];
}

-(void)textFieldDidBeginEditing:(UITextField *)textField {
    
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    [textField resignFirstResponder];
    return YES;
}
- (BOOL)textFieldShouldEndEditing:(UITextField *)textField {
    return YES;
}
- (void)textFieldDidEndEditing:(UITextField *)textField {
}

-(void) doneTyping {
    [nameTextField resignFirstResponder];
}
- (IBAction)changeClicked:(id)sender {
    NSString* changeName = [nameTextField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    
    if ([changeName isEqualToString:@""]) {
        NSString* bleName = [m_PenController BLECurrentName];
        bleName = [bleName stringByReplacingOccurrencesOfString:@"eSM-" withString:@""];
        bleName = [bleName stringByReplacingOccurrencesOfString:@"<" withString:@""];
        bleName = [bleName stringByReplacingOccurrencesOfString:@">" withString:@""];
        bleName = [bleName stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
        if (bleName.length > 8) {
            NSRange range = {0, 8};
            bleName = [bleName substringWithRange:range];
        }
        [nameTextField setText:bleName];
    }else{
        NSString* bleName = [m_PenController BLECurrentName];
        bleName = [bleName stringByReplacingOccurrencesOfString:@"eSM-" withString:@""];
        bleName = [bleName stringByReplacingOccurrencesOfString:@"<" withString:@""];
        bleName = [bleName stringByReplacingOccurrencesOfString:@">" withString:@""];
        bleName = [bleName stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
        if (bleName.length > 8) {
            NSRange range = {0, 8};
            bleName = [bleName substringWithRange:range];
        }
        if([changeName isEqualToString:bleName]) {
            [self closeBtnClicked:nil];
        }else{
            [m_PenController changeDeviceName:changeName];
        }
    }
}

@end

